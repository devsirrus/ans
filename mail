#!/bin/env python3
import smtplib
from email import utils
from email.mime.text import MIMEText
from email.mime.application import MIMEApplication
from email.mime.multipart import MIMEMultipart
import sys
from os.path import basename


def create_message(h_from, h_to, h_cc, h_bcc, subject, message, files):
    msg = MIMEMultipart()
    msg['From'] = h_from
    msg['To'] = h_to
    if h_cc:
        msg['Cc'] = h_cc
    if h_bcc:
        msg['Bcc'] = h_bcc
    msg['Subject'] = subject
    msg['Date'] = utils.formatdate(localtime=True)
#    msg['Message-ID'] = utils.make_msgid()

    body = MIMEText(message, _subtype='plain')
    msg.attach(body)

    for file in files:
        with open(file, "rb") as f:
            part = MIMEApplication(f.read(), Name=basename(file))
        part['Content-Disposition'] = 'attachment; filename="%s"' % basename(file)
        msg.attach(part)
    return msg.as_string()


def send(env_from, env_to, message):
    s = smtplib.SMTP(host="127.0.0.1", port=25)
    s.sendmail(env_from, env_to, message)
    s.close()


def print_info():
    print("h_to:" + str(h_to))
    print("h_cc:" + str(h_cc))
    print("h_bcc:" + h_bcc)
    print("env_from:" + env_from)
    print("env_to:" + str(env_to))
    print("subject:" + subject)
    print("attach:" + attach1 + "," + attach2)


# csv file
argv = sys.argv
if len(argv) == 2:
    csv = argv[1]
else:
    print("arg1 is not defined. ./" + argv[0] + " csvfile")
    sys.exit()

with open(csv, 'r') as f:
    lines = f.read()
    lines = lines.split('\n')

for line in lines:
    if line == "":
        continue

    h_from, h_to, h_cc, h_bcc = "", [], [], []
    env_from, env_to = "", []
    subject, attach1, attach2 = "", "", ""

    line = line.split(",")
    h_from, h_to, h_cc, h_bcc, env_to, env_from, attach1, attach2, subject = line

    h_to = h_to.replace(" ", ",")
    h_cc = h_cc.replace(" ", ",")
    h_bcc = h_bcc.replace(" ", ",")

    if not env_from:
        env_from = h_from
    if not env_to:
        env_to = h_to
    if h_cc:
        env_to = env_to + "," + h_cc
    if h_bcc:
        env_to = env_to + "," + h_bcc

    # STMP.sendmail need to be list
    env_to = env_to.split(",")

    attachments = []
    if attach1:
        attachments.append(attach1)
    if attach2:
        attachments.append(attach2)

#    print_info()

# -------------------------------------------------
# create_message(h_from, h_to, h_cc, h_bcc,subject, message, files)
    message = create_message(h_from, h_to, h_cc, h_bcc, subject, subject, attachments)
# -------------------------------------------------
# def send(env_from, env_from, message):
    print("start send----------")
    send(env_from, env_to, message)

print("End----------")
